// source: quran.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.protobuf.Font', null, global);
goog.exportSymbol('proto.protobuf.Glyph', null, global);
goog.exportSymbol('proto.protobuf.GlyphLayout', null, global);
goog.exportSymbol('proto.protobuf.LayOut', null, global);
goog.exportSymbol('proto.protobuf.Line', null, global);
goog.exportSymbol('proto.protobuf.Page', null, global);
goog.exportSymbol('proto.protobuf.Path', null, global);
goog.exportSymbol('proto.protobuf.PathElem', null, global);
goog.exportSymbol('proto.protobuf.Sura', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.Font = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.Font, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.Font.displayName = 'proto.protobuf.Font';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.Glyph = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.Glyph.repeatedFields_, null);
};
goog.inherits(proto.protobuf.Glyph, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.Glyph.displayName = 'proto.protobuf.Glyph';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.Path = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.Path.repeatedFields_, null);
};
goog.inherits(proto.protobuf.Path, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.Path.displayName = 'proto.protobuf.Path';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.PathElem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.PathElem.repeatedFields_, null);
};
goog.inherits(proto.protobuf.PathElem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.PathElem.displayName = 'proto.protobuf.PathElem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.LayOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.LayOut.repeatedFields_, null);
};
goog.inherits(proto.protobuf.LayOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.LayOut.displayName = 'proto.protobuf.LayOut';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.Page = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.Page.repeatedFields_, null);
};
goog.inherits(proto.protobuf.Page, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.Page.displayName = 'proto.protobuf.Page';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.Line = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protobuf.Line.repeatedFields_, null);
};
goog.inherits(proto.protobuf.Line, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.Line.displayName = 'proto.protobuf.Line';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.GlyphLayout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.GlyphLayout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.GlyphLayout.displayName = 'proto.protobuf.GlyphLayout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protobuf.Sura = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protobuf.Sura, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protobuf.Sura.displayName = 'proto.protobuf.Sura';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.Font.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.Font.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.Font} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Font.toObject = function(includeInstance, msg) {
  var f, obj = {
    glyphsMap: (f = msg.getGlyphsMap()) ? f.toObject(includeInstance, proto.protobuf.Glyph.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.Font}
 */
proto.protobuf.Font.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.Font;
  return proto.protobuf.Font.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.Font} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.Font}
 */
proto.protobuf.Font.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getGlyphsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.protobuf.Glyph.deserializeBinaryFromReader, 0, new proto.protobuf.Glyph());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.Font.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.Font.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.Font} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Font.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGlyphsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.protobuf.Glyph.serializeBinaryToWriter);
  }
};


/**
 * map<int32, Glyph> glyphs = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.protobuf.Glyph>}
 */
proto.protobuf.Font.prototype.getGlyphsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.protobuf.Glyph>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.protobuf.Glyph));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.protobuf.Font} returns this
 */
proto.protobuf.Font.prototype.clearGlyphsMap = function() {
  this.getGlyphsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.Glyph.repeatedFields_ = [2,3,4,5,6,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.Glyph.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.Glyph.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.Glyph} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Glyph.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bboxList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    defaultList: jspb.Message.toObjectList(msg.getDefaultList(),
    proto.protobuf.Path.toObject, includeInstance),
    limitsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 4)) == null ? undefined : f,
    minleftList: jspb.Message.toObjectList(msg.getMinleftList(),
    proto.protobuf.Path.toObject, includeInstance),
    maxleftList: jspb.Message.toObjectList(msg.getMaxleftList(),
    proto.protobuf.Path.toObject, includeInstance),
    minrightList: jspb.Message.toObjectList(msg.getMinrightList(),
    proto.protobuf.Path.toObject, includeInstance),
    maxrightList: jspb.Message.toObjectList(msg.getMaxrightList(),
    proto.protobuf.Path.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.Glyph}
 */
proto.protobuf.Glyph.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.Glyph;
  return proto.protobuf.Glyph.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.Glyph} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.Glyph}
 */
proto.protobuf.Glyph.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBbox(values[i]);
      }
      break;
    case 3:
      var value = new proto.protobuf.Path;
      reader.readMessage(value,proto.protobuf.Path.deserializeBinaryFromReader);
      msg.addDefault(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLimits(values[i]);
      }
      break;
    case 5:
      var value = new proto.protobuf.Path;
      reader.readMessage(value,proto.protobuf.Path.deserializeBinaryFromReader);
      msg.addMinleft(value);
      break;
    case 6:
      var value = new proto.protobuf.Path;
      reader.readMessage(value,proto.protobuf.Path.deserializeBinaryFromReader);
      msg.addMaxleft(value);
      break;
    case 7:
      var value = new proto.protobuf.Path;
      reader.readMessage(value,proto.protobuf.Path.deserializeBinaryFromReader);
      msg.addMinright(value);
      break;
    case 8:
      var value = new proto.protobuf.Path;
      reader.readMessage(value,proto.protobuf.Path.deserializeBinaryFromReader);
      msg.addMaxright(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.Glyph.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.Glyph.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.Glyph} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Glyph.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBboxList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getDefaultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.protobuf.Path.serializeBinaryToWriter
    );
  }
  f = message.getLimitsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      4,
      f
    );
  }
  f = message.getMinleftList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.protobuf.Path.serializeBinaryToWriter
    );
  }
  f = message.getMaxleftList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.protobuf.Path.serializeBinaryToWriter
    );
  }
  f = message.getMinrightList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.protobuf.Path.serializeBinaryToWriter
    );
  }
  f = message.getMaxrightList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.protobuf.Path.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.protobuf.Glyph.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.Glyph} returns this
 */
proto.protobuf.Glyph.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated double bbox = 2;
 * @return {!Array<number>}
 */
proto.protobuf.Glyph.prototype.getBboxList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf.Glyph} returns this
 */
proto.protobuf.Glyph.prototype.setBboxList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.Glyph} returns this
 */
proto.protobuf.Glyph.prototype.addBbox = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.Glyph} returns this
 */
proto.protobuf.Glyph.prototype.clearBboxList = function() {
  return this.setBboxList([]);
};


/**
 * repeated Path default = 3;
 * @return {!Array<!proto.protobuf.Path>}
 */
proto.protobuf.Glyph.prototype.getDefaultList = function() {
  return /** @type{!Array<!proto.protobuf.Path>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.Path, 3));
};


/**
 * @param {!Array<!proto.protobuf.Path>} value
 * @return {!proto.protobuf.Glyph} returns this
*/
proto.protobuf.Glyph.prototype.setDefaultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.protobuf.Path=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.Path}
 */
proto.protobuf.Glyph.prototype.addDefault = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protobuf.Path, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.Glyph} returns this
 */
proto.protobuf.Glyph.prototype.clearDefaultList = function() {
  return this.setDefaultList([]);
};


/**
 * repeated double limits = 4;
 * @return {!Array<number>}
 */
proto.protobuf.Glyph.prototype.getLimitsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf.Glyph} returns this
 */
proto.protobuf.Glyph.prototype.setLimitsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.Glyph} returns this
 */
proto.protobuf.Glyph.prototype.addLimits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.Glyph} returns this
 */
proto.protobuf.Glyph.prototype.clearLimitsList = function() {
  return this.setLimitsList([]);
};


/**
 * repeated Path minLeft = 5;
 * @return {!Array<!proto.protobuf.Path>}
 */
proto.protobuf.Glyph.prototype.getMinleftList = function() {
  return /** @type{!Array<!proto.protobuf.Path>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.Path, 5));
};


/**
 * @param {!Array<!proto.protobuf.Path>} value
 * @return {!proto.protobuf.Glyph} returns this
*/
proto.protobuf.Glyph.prototype.setMinleftList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.protobuf.Path=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.Path}
 */
proto.protobuf.Glyph.prototype.addMinleft = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.protobuf.Path, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.Glyph} returns this
 */
proto.protobuf.Glyph.prototype.clearMinleftList = function() {
  return this.setMinleftList([]);
};


/**
 * repeated Path maxLeft = 6;
 * @return {!Array<!proto.protobuf.Path>}
 */
proto.protobuf.Glyph.prototype.getMaxleftList = function() {
  return /** @type{!Array<!proto.protobuf.Path>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.Path, 6));
};


/**
 * @param {!Array<!proto.protobuf.Path>} value
 * @return {!proto.protobuf.Glyph} returns this
*/
proto.protobuf.Glyph.prototype.setMaxleftList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.protobuf.Path=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.Path}
 */
proto.protobuf.Glyph.prototype.addMaxleft = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.protobuf.Path, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.Glyph} returns this
 */
proto.protobuf.Glyph.prototype.clearMaxleftList = function() {
  return this.setMaxleftList([]);
};


/**
 * repeated Path minRight = 7;
 * @return {!Array<!proto.protobuf.Path>}
 */
proto.protobuf.Glyph.prototype.getMinrightList = function() {
  return /** @type{!Array<!proto.protobuf.Path>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.Path, 7));
};


/**
 * @param {!Array<!proto.protobuf.Path>} value
 * @return {!proto.protobuf.Glyph} returns this
*/
proto.protobuf.Glyph.prototype.setMinrightList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.protobuf.Path=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.Path}
 */
proto.protobuf.Glyph.prototype.addMinright = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.protobuf.Path, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.Glyph} returns this
 */
proto.protobuf.Glyph.prototype.clearMinrightList = function() {
  return this.setMinrightList([]);
};


/**
 * repeated Path maxRight = 8;
 * @return {!Array<!proto.protobuf.Path>}
 */
proto.protobuf.Glyph.prototype.getMaxrightList = function() {
  return /** @type{!Array<!proto.protobuf.Path>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.Path, 8));
};


/**
 * @param {!Array<!proto.protobuf.Path>} value
 * @return {!proto.protobuf.Glyph} returns this
*/
proto.protobuf.Glyph.prototype.setMaxrightList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.protobuf.Path=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.Path}
 */
proto.protobuf.Glyph.prototype.addMaxright = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.protobuf.Path, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.Glyph} returns this
 */
proto.protobuf.Glyph.prototype.clearMaxrightList = function() {
  return this.setMaxrightList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.Path.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.Path.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.Path.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.Path} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Path.toObject = function(includeInstance, msg) {
  var f, obj = {
    elemsList: jspb.Message.toObjectList(msg.getElemsList(),
    proto.protobuf.PathElem.toObject, includeInstance),
    colorList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.Path}
 */
proto.protobuf.Path.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.Path;
  return proto.protobuf.Path.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.Path} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.Path}
 */
proto.protobuf.Path.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf.PathElem;
      reader.readMessage(value,proto.protobuf.PathElem.deserializeBinaryFromReader);
      msg.addElems(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addColor(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.Path.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.Path.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.Path} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Path.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protobuf.PathElem.serializeBinaryToWriter
    );
  }
  f = message.getColorList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
};


/**
 * repeated PathElem elems = 1;
 * @return {!Array<!proto.protobuf.PathElem>}
 */
proto.protobuf.Path.prototype.getElemsList = function() {
  return /** @type{!Array<!proto.protobuf.PathElem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.PathElem, 1));
};


/**
 * @param {!Array<!proto.protobuf.PathElem>} value
 * @return {!proto.protobuf.Path} returns this
*/
proto.protobuf.Path.prototype.setElemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protobuf.PathElem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.PathElem}
 */
proto.protobuf.Path.prototype.addElems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protobuf.PathElem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.Path} returns this
 */
proto.protobuf.Path.prototype.clearElemsList = function() {
  return this.setElemsList([]);
};


/**
 * repeated double color = 2;
 * @return {!Array<number>}
 */
proto.protobuf.Path.prototype.getColorList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf.Path} returns this
 */
proto.protobuf.Path.prototype.setColorList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.Path} returns this
 */
proto.protobuf.Path.prototype.addColor = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.Path} returns this
 */
proto.protobuf.Path.prototype.clearColorList = function() {
  return this.setColorList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.PathElem.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.PathElem.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.PathElem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.PathElem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.PathElem.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.PathElem}
 */
proto.protobuf.PathElem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.PathElem;
  return proto.protobuf.PathElem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.PathElem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.PathElem}
 */
proto.protobuf.PathElem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPoints(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.PathElem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.PathElem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.PathElem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.PathElem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
};


/**
 * repeated double points = 1;
 * @return {!Array<number>}
 */
proto.protobuf.PathElem.prototype.getPointsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.protobuf.PathElem} returns this
 */
proto.protobuf.PathElem.prototype.setPointsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.protobuf.PathElem} returns this
 */
proto.protobuf.PathElem.prototype.addPoints = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.PathElem} returns this
 */
proto.protobuf.PathElem.prototype.clearPointsList = function() {
  return this.setPointsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.LayOut.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.LayOut.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.LayOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.LayOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.LayOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagesList: jspb.Message.toObjectList(msg.getPagesList(),
    proto.protobuf.Page.toObject, includeInstance),
    surasList: jspb.Message.toObjectList(msg.getSurasList(),
    proto.protobuf.Sura.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.LayOut}
 */
proto.protobuf.LayOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.LayOut;
  return proto.protobuf.LayOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.LayOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.LayOut}
 */
proto.protobuf.LayOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf.Page;
      reader.readMessage(value,proto.protobuf.Page.deserializeBinaryFromReader);
      msg.addPages(value);
      break;
    case 2:
      var value = new proto.protobuf.Sura;
      reader.readMessage(value,proto.protobuf.Sura.deserializeBinaryFromReader);
      msg.addSuras(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.LayOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.LayOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.LayOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.LayOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protobuf.Page.serializeBinaryToWriter
    );
  }
  f = message.getSurasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.protobuf.Sura.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Page pages = 1;
 * @return {!Array<!proto.protobuf.Page>}
 */
proto.protobuf.LayOut.prototype.getPagesList = function() {
  return /** @type{!Array<!proto.protobuf.Page>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.Page, 1));
};


/**
 * @param {!Array<!proto.protobuf.Page>} value
 * @return {!proto.protobuf.LayOut} returns this
*/
proto.protobuf.LayOut.prototype.setPagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protobuf.Page=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.Page}
 */
proto.protobuf.LayOut.prototype.addPages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protobuf.Page, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.LayOut} returns this
 */
proto.protobuf.LayOut.prototype.clearPagesList = function() {
  return this.setPagesList([]);
};


/**
 * repeated Sura suras = 2;
 * @return {!Array<!proto.protobuf.Sura>}
 */
proto.protobuf.LayOut.prototype.getSurasList = function() {
  return /** @type{!Array<!proto.protobuf.Sura>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.Sura, 2));
};


/**
 * @param {!Array<!proto.protobuf.Sura>} value
 * @return {!proto.protobuf.LayOut} returns this
*/
proto.protobuf.LayOut.prototype.setSurasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.protobuf.Sura=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.Sura}
 */
proto.protobuf.LayOut.prototype.addSuras = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protobuf.Sura, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.LayOut} returns this
 */
proto.protobuf.LayOut.prototype.clearSurasList = function() {
  return this.setSurasList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.Page.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.Page.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.Page.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.Page} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Page.toObject = function(includeInstance, msg) {
  var f, obj = {
    linesList: jspb.Message.toObjectList(msg.getLinesList(),
    proto.protobuf.Line.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.Page}
 */
proto.protobuf.Page.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.Page;
  return proto.protobuf.Page.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.Page} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.Page}
 */
proto.protobuf.Page.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protobuf.Line;
      reader.readMessage(value,proto.protobuf.Line.deserializeBinaryFromReader);
      msg.addLines(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.Page.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.Page.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.Page} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Page.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protobuf.Line.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Line lines = 1;
 * @return {!Array<!proto.protobuf.Line>}
 */
proto.protobuf.Page.prototype.getLinesList = function() {
  return /** @type{!Array<!proto.protobuf.Line>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.Line, 1));
};


/**
 * @param {!Array<!proto.protobuf.Line>} value
 * @return {!proto.protobuf.Page} returns this
*/
proto.protobuf.Page.prototype.setLinesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protobuf.Line=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.Line}
 */
proto.protobuf.Page.prototype.addLines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protobuf.Line, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.Page} returns this
 */
proto.protobuf.Page.prototype.clearLinesList = function() {
  return this.setLinesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protobuf.Line.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.Line.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.Line.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.Line} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Line.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    x: jspb.Message.getFieldWithDefault(msg, 2, 0),
    y: jspb.Message.getFieldWithDefault(msg, 3, 0),
    text: jspb.Message.getFieldWithDefault(msg, 4, ""),
    glyphsList: jspb.Message.toObjectList(msg.getGlyphsList(),
    proto.protobuf.GlyphLayout.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.Line}
 */
proto.protobuf.Line.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.Line;
  return proto.protobuf.Line.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.Line} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.Line}
 */
proto.protobuf.Line.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 5:
      var value = new proto.protobuf.GlyphLayout;
      reader.readMessage(value,proto.protobuf.GlyphLayout.deserializeBinaryFromReader);
      msg.addGlyphs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.Line.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.Line.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.Line} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Line.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGlyphsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.protobuf.GlyphLayout.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.protobuf.Line.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.Line} returns this
 */
proto.protobuf.Line.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 x = 2;
 * @return {number}
 */
proto.protobuf.Line.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.Line} returns this
 */
proto.protobuf.Line.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 y = 3;
 * @return {number}
 */
proto.protobuf.Line.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.Line} returns this
 */
proto.protobuf.Line.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string text = 4;
 * @return {string}
 */
proto.protobuf.Line.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.Line} returns this
 */
proto.protobuf.Line.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated GlyphLayout glyphs = 5;
 * @return {!Array<!proto.protobuf.GlyphLayout>}
 */
proto.protobuf.Line.prototype.getGlyphsList = function() {
  return /** @type{!Array<!proto.protobuf.GlyphLayout>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protobuf.GlyphLayout, 5));
};


/**
 * @param {!Array<!proto.protobuf.GlyphLayout>} value
 * @return {!proto.protobuf.Line} returns this
*/
proto.protobuf.Line.prototype.setGlyphsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.protobuf.GlyphLayout=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protobuf.GlyphLayout}
 */
proto.protobuf.Line.prototype.addGlyphs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.protobuf.GlyphLayout, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protobuf.Line} returns this
 */
proto.protobuf.Line.prototype.clearGlyphsList = function() {
  return this.setGlyphsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.GlyphLayout.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.GlyphLayout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.GlyphLayout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.GlyphLayout.toObject = function(includeInstance, msg) {
  var f, obj = {
    codepoint: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cluster: jspb.Message.getFieldWithDefault(msg, 2, 0),
    xAdvance: jspb.Message.getFieldWithDefault(msg, 3, 0),
    xOffset: jspb.Message.getFieldWithDefault(msg, 4, 0),
    yOffset: jspb.Message.getFieldWithDefault(msg, 5, 0),
    color: jspb.Message.getFieldWithDefault(msg, 6, 0),
    lefttatweel: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    righttatweel: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    beginsajda: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    endsajda: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.GlyphLayout}
 */
proto.protobuf.GlyphLayout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.GlyphLayout;
  return proto.protobuf.GlyphLayout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.GlyphLayout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.GlyphLayout}
 */
proto.protobuf.GlyphLayout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCodepoint(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCluster(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setXAdvance(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setXOffset(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYOffset(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColor(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLefttatweel(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRighttatweel(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBeginsajda(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEndsajda(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.GlyphLayout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.GlyphLayout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.GlyphLayout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.GlyphLayout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodepoint();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCluster();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional int32 codepoint = 1;
 * @return {number}
 */
proto.protobuf.GlyphLayout.prototype.getCodepoint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.setCodepoint = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 cluster = 2;
 * @return {number}
 */
proto.protobuf.GlyphLayout.prototype.getCluster = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.setCluster = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 x_advance = 3;
 * @return {number}
 */
proto.protobuf.GlyphLayout.prototype.getXAdvance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.setXAdvance = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.clearXAdvance = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.GlyphLayout.prototype.hasXAdvance = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 x_offset = 4;
 * @return {number}
 */
proto.protobuf.GlyphLayout.prototype.getXOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.setXOffset = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.clearXOffset = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.GlyphLayout.prototype.hasXOffset = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 y_offset = 5;
 * @return {number}
 */
proto.protobuf.GlyphLayout.prototype.getYOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.setYOffset = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.clearYOffset = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.GlyphLayout.prototype.hasYOffset = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 color = 6;
 * @return {number}
 */
proto.protobuf.GlyphLayout.prototype.getColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.setColor = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.clearColor = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.GlyphLayout.prototype.hasColor = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double lefttatweel = 7;
 * @return {number}
 */
proto.protobuf.GlyphLayout.prototype.getLefttatweel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.setLefttatweel = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.clearLefttatweel = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.GlyphLayout.prototype.hasLefttatweel = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double righttatweel = 8;
 * @return {number}
 */
proto.protobuf.GlyphLayout.prototype.getRighttatweel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.setRighttatweel = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.clearRighttatweel = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.GlyphLayout.prototype.hasRighttatweel = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool beginsajda = 9;
 * @return {boolean}
 */
proto.protobuf.GlyphLayout.prototype.getBeginsajda = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.setBeginsajda = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.clearBeginsajda = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.GlyphLayout.prototype.hasBeginsajda = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool endsajda = 10;
 * @return {boolean}
 */
proto.protobuf.GlyphLayout.prototype.getEndsajda = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.setEndsajda = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.protobuf.GlyphLayout} returns this
 */
proto.protobuf.GlyphLayout.prototype.clearEndsajda = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protobuf.GlyphLayout.prototype.hasEndsajda = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protobuf.Sura.prototype.toObject = function(opt_includeInstance) {
  return proto.protobuf.Sura.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protobuf.Sura} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Sura.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pageNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    x: jspb.Message.getFieldWithDefault(msg, 3, 0),
    y: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protobuf.Sura}
 */
proto.protobuf.Sura.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protobuf.Sura;
  return proto.protobuf.Sura.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protobuf.Sura} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protobuf.Sura}
 */
proto.protobuf.Sura.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setX(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protobuf.Sura.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protobuf.Sura.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protobuf.Sura} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protobuf.Sura.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPageNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getX();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getY();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.protobuf.Sura.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protobuf.Sura} returns this
 */
proto.protobuf.Sura.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 page_number = 2;
 * @return {number}
 */
proto.protobuf.Sura.prototype.getPageNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.Sura} returns this
 */
proto.protobuf.Sura.prototype.setPageNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 x = 3;
 * @return {number}
 */
proto.protobuf.Sura.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.Sura} returns this
 */
proto.protobuf.Sura.prototype.setX = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 y = 4;
 * @return {number}
 */
proto.protobuf.Sura.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protobuf.Sura} returns this
 */
proto.protobuf.Sura.prototype.setY = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


goog.object.extend(exports, proto.protobuf);
